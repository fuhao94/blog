{"remainingRequest":"/Users/zhangfuhao/personal/VuePress/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangfuhao/personal/VuePress/node_modules/@vuepress/theme-default/components/PageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangfuhao/personal/VuePress/node_modules/@vuepress/theme-default/components/PageEdit.vue","mtime":499162500000},{"path":"/Users/zhangfuhao/personal/VuePress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangfuhao/personal/VuePress/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangfuhao/personal/VuePress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangfuhao/personal/VuePress/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGVuZGluZ1NsYXNoUkUsIG91dGJvdW5kUkUgfSBmcm9tICcuLi91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYWdlRWRpdCcsCiAgY29tcHV0ZWQ6IHsKICAgIGxhc3RVcGRhdGVkICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHBhZ2UubGFzdFVwZGF0ZWQKICAgIH0sCgogICAgbGFzdFVwZGF0ZWRUZXh0ICgpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubGFzdFVwZGF0ZWQKICAgICAgfQogICAgICBpZiAodHlwZW9mIHRoaXMuJHNpdGUudGhlbWVDb25maWcubGFzdFVwZGF0ZWQgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHNpdGUudGhlbWVDb25maWcubGFzdFVwZGF0ZWQKICAgICAgfQogICAgICByZXR1cm4gJ0xhc3QgVXBkYXRlZCcKICAgIH0sCgogICAgZWRpdExpbmsgKCkgewogICAgICBpZiAodGhpcy4kcGFnZS5mcm9udG1hdHRlci5lZGl0TGluayA9PT0gZmFsc2UpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCB7CiAgICAgICAgcmVwbywKICAgICAgICBlZGl0TGlua3MsCiAgICAgICAgZG9jc0RpciA9ICcnLAogICAgICAgIGRvY3NCcmFuY2ggPSAnbWFzdGVyJywKICAgICAgICBkb2NzUmVwbyA9IHJlcG8KICAgICAgfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcKCiAgICAgIGlmIChkb2NzUmVwbyAmJiBlZGl0TGlua3MgJiYgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgpIHsKICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVFZGl0TGluaygKICAgICAgICAgIHJlcG8sCiAgICAgICAgICBkb2NzUmVwbywKICAgICAgICAgIGRvY3NEaXIsCiAgICAgICAgICBkb2NzQnJhbmNoLAogICAgICAgICAgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgKICAgICAgICApCiAgICAgIH0KICAgIH0sCgogICAgZWRpdExpbmtUZXh0ICgpIHsKICAgICAgcmV0dXJuICgKICAgICAgICB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5lZGl0TGlua1RleHQKICAgICAgICB8fCB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLmVkaXRMaW5rVGV4dAogICAgICAgIHx8IGBFZGl0IHRoaXMgcGFnZWAKICAgICAgKQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUVkaXRMaW5rIChyZXBvLCBkb2NzUmVwbywgZG9jc0RpciwgZG9jc0JyYW5jaCwgcGF0aCkgewogICAgICBjb25zdCBiaXRidWNrZXQgPSAvYml0YnVja2V0Lm9yZy8KICAgICAgaWYgKGJpdGJ1Y2tldC50ZXN0KHJlcG8pKSB7CiAgICAgICAgY29uc3QgYmFzZSA9IG91dGJvdW5kUkUudGVzdChkb2NzUmVwbykgPyBkb2NzUmVwbyA6IHJlcG8KICAgICAgICByZXR1cm4gKAogICAgICAgICAgYmFzZS5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKQogICAgICAgICAgKyBgL3NyY2AKICAgICAgICAgICsgYC8ke2RvY3NCcmFuY2h9L2AKICAgICAgICAgICsgKGRvY3NEaXIgPyBkb2NzRGlyLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpICsgJy8nIDogJycpCiAgICAgICAgICArIHBhdGgKICAgICAgICAgICsgYD9tb2RlPWVkaXQmc3BhPTAmYXQ9JHtkb2NzQnJhbmNofSZmaWxldmlld2VyPWZpbGUtdmlldy1kZWZhdWx0YAogICAgICAgICkKICAgICAgfQoKICAgICAgY29uc3QgYmFzZSA9IG91dGJvdW5kUkUudGVzdChkb2NzUmVwbykKICAgICAgICA/IGRvY3NSZXBvCiAgICAgICAgOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZG9jc1JlcG99YAogICAgICByZXR1cm4gKAogICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykKICAgICAgICArIGAvZWRpdGAKICAgICAgICArIGAvJHtkb2NzQnJhbmNofS9gCiAgICAgICAgKyAoZG9jc0RpciA/IGRvY3NEaXIucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKyAnLycgOiAnJykKICAgICAgICArIHBhdGgKICAgICAgKQogICAgfQogIH0KfQo="},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div class=\"edit-link\" v-if=\"editLink\">\n      <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">{{ editLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div class=\"last-updated\" v-if=\"lastUpdated\">\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n<script>\nimport { endingSlashRE, outboundRE } from '../util'\n\nexport default {\n  name: 'PageEdit',\n  computed: {\n    lastUpdated () {\n      return this.$page.lastUpdated\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    editLink () {\n      if (this.$page.frontmatter.editLink === false) {\n        return\n      }\n      const {\n        repo,\n        editLinks,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (docsRepo && editLinks && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText\n        || this.$site.themeConfig.editLinkText\n        || `Edit this page`\n      )\n    }\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo) ? docsRepo : repo\n        return (\n          base.replace(endingSlashRE, '')\n          + `/src`\n          + `/${docsBranch}/`\n          + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n          + path\n          + `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/edit`\n        + `/${docsBranch}/`\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n        + path\n      )\n    }\n  }\n}\n</script>\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl';\n\n.page-edit {\n  @extend $wrapper;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  overflow: auto;\n\n  .edit-link {\n    display: inline-block;\n\n    a {\n      color: lighten($textColor, 25%);\n      margin-right: 0.25rem;\n    }\n  }\n\n  .last-updated {\n    float: right;\n    font-size: 0.9em;\n\n    .prefix {\n      font-weight: 500;\n      color: lighten($textColor, 25%);\n    }\n\n    .time {\n      font-weight: 400;\n      color: #aaa;\n    }\n  }\n}\n\n@media (max-width: $MQMobile) {\n  .page-edit {\n    .edit-link {\n      margin-bottom: 0.5rem;\n    }\n\n    .last-updated {\n      font-size: 0.8em;\n      float: none;\n      text-align: left;\n    }\n  }\n}\n</style>\n"]}]}